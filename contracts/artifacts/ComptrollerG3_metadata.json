{
	"compiler": {
		"version": "0.5.17+commit.d19bba13"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "action",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "pauseState",
						"type": "bool"
					}
				],
				"name": "ActionPaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "action",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "pauseState",
						"type": "bool"
					}
				],
				"name": "ActionPaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "ActionProtocolPaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "venusDelta",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "venusBorrowIndex",
						"type": "uint256"
					}
				],
				"name": "DistributedBorrowerVenus",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "supplier",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "venusDelta",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "venusSupplyIndex",
						"type": "uint256"
					}
				],
				"name": "DistributedSupplierVenus",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "vaiMinter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "venusDelta",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "venusVAIMintIndex",
						"type": "uint256"
					}
				],
				"name": "DistributedVAIMinterVenus",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "DistributedVAIVaultVenus",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "error",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "info",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "detail",
						"type": "uint256"
					}
				],
				"name": "Failure",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "MarketEntered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "MarketExited",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					}
				],
				"name": "MarketListed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBorrowCap",
						"type": "uint256"
					}
				],
				"name": "NewBorrowCap",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldBorrowCapGuardian",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newBorrowCapGuardian",
						"type": "address"
					}
				],
				"name": "NewBorrowCapGuardian",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldCloseFactorMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newCloseFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "NewCloseFactor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldCollateralFactorMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newCollateralFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "NewCollateralFactor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldLiquidationIncentiveMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newLiquidationIncentiveMantissa",
						"type": "uint256"
					}
				],
				"name": "NewLiquidationIncentive",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldMaxAssets",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newMaxAssets",
						"type": "uint256"
					}
				],
				"name": "NewMaxAssets",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldPauseGuardian",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newPauseGuardian",
						"type": "address"
					}
				],
				"name": "NewPauseGuardian",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract PriceOracle",
						"name": "oldPriceOracle",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "contract PriceOracle",
						"name": "newPriceOracle",
						"type": "address"
					}
				],
				"name": "NewPriceOracle",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract VAIControllerInterface",
						"name": "oldVAIController",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "contract VAIControllerInterface",
						"name": "newVAIController",
						"type": "address"
					}
				],
				"name": "NewVAIController",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldVAIMintRate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newVAIMintRate",
						"type": "uint256"
					}
				],
				"name": "NewVAIMintRate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "vault_",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "releaseStartBlock_",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "releaseInterval_",
						"type": "uint256"
					}
				],
				"name": "NewVAIVaultInfo",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldVenusVAIRate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newVenusVAIRate",
						"type": "uint256"
					}
				],
				"name": "NewVenusVAIRate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldVenusVAIVaultRate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newVenusVAIVaultRate",
						"type": "uint256"
					}
				],
				"name": "NewVenusVAIVaultRate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newSpeed",
						"type": "uint256"
					}
				],
				"name": "VenusSpeedUpdated",
				"type": "event"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract Unitroller",
						"name": "unitroller",
						"type": "address"
					}
				],
				"name": "_become",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "_borrowGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "_mintGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newBorrowCapGuardian",
						"type": "address"
					}
				],
				"name": "_setBorrowCapGuardian",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newCloseFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "_setCloseFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "newCollateralFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "_setCollateralFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newLiquidationIncentiveMantissa",
						"type": "uint256"
					}
				],
				"name": "_setLiquidationIncentive",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract VToken[]",
						"name": "vTokens",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "newBorrowCaps",
						"type": "uint256[]"
					}
				],
				"name": "_setMarketBorrowCaps",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newMaxAssets",
						"type": "uint256"
					}
				],
				"name": "_setMaxAssets",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract PriceOracle",
						"name": "newOracle",
						"type": "address"
					}
				],
				"name": "_setPriceOracle",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "_setProtocolPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract VAIControllerInterface",
						"name": "vaiController_",
						"type": "address"
					}
				],
				"name": "_setVAIController",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newVAIMintRate",
						"type": "uint256"
					}
				],
				"name": "_setVAIMintRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vault_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "releaseStartBlock_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minReleaseAmount_",
						"type": "uint256"
					}
				],
				"name": "_setVAIVaultInfo",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "venusSpeed",
						"type": "uint256"
					}
				],
				"name": "_setVenusSpeed",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "venusVAIRate_",
						"type": "uint256"
					}
				],
				"name": "_setVenusVAIRate",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "venusVAIVaultRate_",
						"type": "uint256"
					}
				],
				"name": "_setVenusVAIVaultRate",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					}
				],
				"name": "_supportMarket",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "accountAssets",
				"outputs": [
					{
						"internalType": "contract VToken",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allMarkets",
				"outputs": [
					{
						"internalType": "contract VToken",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "borrowAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "borrowCapGuardian",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "borrowCaps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "borrowGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "borrowVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "contract VToken",
						"name": "vToken",
						"type": "address"
					}
				],
				"name": "checkMembership",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					},
					{
						"internalType": "contract VToken[]",
						"name": "vTokens",
						"type": "address[]"
					}
				],
				"name": "claimVenus",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					}
				],
				"name": "claimVenus",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address[]",
						"name": "holders",
						"type": "address[]"
					},
					{
						"internalType": "contract VToken[]",
						"name": "vTokens",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "borrowers",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "suppliers",
						"type": "bool"
					}
				],
				"name": "claimVenus",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "closeFactorMantissa",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "comptrollerImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vaiMinter",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "distributeAll",
						"type": "bool"
					}
				],
				"name": "distributeVAIMinterVenus",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address[]",
						"name": "vTokens",
						"type": "address[]"
					}
				],
				"name": "enterMarkets",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vTokenAddress",
						"type": "address"
					}
				],
				"name": "exitMarket",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getAccountLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getAllMarkets",
				"outputs": [
					{
						"internalType": "contract VToken[]",
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getAssetsIn",
				"outputs": [
					{
						"internalType": "contract VToken[]",
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getBlockNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "vTokenModify",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "getHypotheticalAccountLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getXVSAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isComptroller",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "vTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "repayAmount",
						"type": "uint256"
					}
				],
				"name": "liquidateBorrowAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "vTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualRepayAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "liquidateBorrowVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "vTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "vTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualRepayAmount",
						"type": "uint256"
					}
				],
				"name": "liquidateCalculateSeizeTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "liquidationIncentiveMantissa",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "markets",
				"outputs": [
					{
						"internalType": "bool",
						"name": "isListed",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "collateralFactorMantissa",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isVenus",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "maxAssets",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "minReleaseAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "mintAmount",
						"type": "uint256"
					}
				],
				"name": "mintAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "mintGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "mintVAIGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualMintAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "mintTokens",
						"type": "uint256"
					}
				],
				"name": "mintVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "mintedVAIs",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "oracle",
				"outputs": [
					{
						"internalType": "contract PriceOracle",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pauseGuardian",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pendingAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pendingComptrollerImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "protocolPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "redeemer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					}
				],
				"name": "redeemAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "redeemer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "redeemAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					}
				],
				"name": "redeemVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "releaseStartBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "releaseToVault",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "payer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "repayAmount",
						"type": "uint256"
					}
				],
				"name": "repayBorrowAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "payer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualRepayAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowerIndex",
						"type": "uint256"
					}
				],
				"name": "repayBorrowVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "repayVAIGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "vTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "seizeAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "seizeGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "vTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "seizeVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "setMintedVAIOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "src",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "transferTokens",
						"type": "uint256"
					}
				],
				"name": "transferAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "transferGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "vToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "src",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "transferTokens",
						"type": "uint256"
					}
				],
				"name": "transferVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "vaiController",
				"outputs": [
					{
						"internalType": "contract VAIControllerInterface",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "vaiMintRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "vaiVaultAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "venusAccrued",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "venusBorrowState",
				"outputs": [
					{
						"internalType": "uint224",
						"name": "index",
						"type": "uint224"
					},
					{
						"internalType": "uint32",
						"name": "block",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "venusBorrowerIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "venusInitialIndex",
				"outputs": [
					{
						"internalType": "uint224",
						"name": "",
						"type": "uint224"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "venusRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "venusSpeeds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "venusSupplierIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "venusSupplyState",
				"outputs": [
					{
						"internalType": "uint224",
						"name": "index",
						"type": "uint224"
					},
					{
						"internalType": "uint32",
						"name": "block",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "venusVAIRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "venusVAIVaultRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Venus",
			"methods": {
				"_setBorrowCapGuardian(address)": {
					"params": {
						"newBorrowCapGuardian": "The address of the new Borrow Cap Guardian"
					}
				},
				"_setCloseFactor(uint256)": {
					"details": "Admin function to set closeFactor",
					"params": {
						"newCloseFactorMantissa": "New close factor, scaled by 1e18"
					},
					"return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
				},
				"_setCollateralFactor(address,uint256)": {
					"details": "Admin function to set per-market collateralFactor",
					"params": {
						"newCollateralFactorMantissa": "The new collateral factor, scaled by 1e18",
						"vToken": "The market to set the factor on"
					},
					"return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
				},
				"_setLiquidationIncentive(uint256)": {
					"details": "Admin function to set liquidationIncentive",
					"params": {
						"newLiquidationIncentiveMantissa": "New liquidationIncentive scaled by 1e18"
					},
					"return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
				},
				"_setMarketBorrowCaps(address[],uint256[])": {
					"details": "Admin or borrowCapGuardian function to set the borrow caps. A borrow cap of 0 corresponds to unlimited borrowing.",
					"params": {
						"newBorrowCaps": "The new borrow cap values in underlying to be set. A value of 0 corresponds to unlimited borrowing.",
						"vTokens": "The addresses of the markets (tokens) to change the borrow caps for"
					}
				},
				"_setMaxAssets(uint256)": {
					"details": "Admin function to set maxAssets",
					"params": {
						"newMaxAssets": "New max assets"
					},
					"return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
				},
				"_setPriceOracle(address)": {
					"details": "Admin function to set a new price oracle",
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"_setVAIController(address)": {
					"details": "Admin function to set a new VAI controller",
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"_setVAIVaultInfo(address,uint256,uint256)": {
					"params": {
						"minReleaseAmount_": "The minimum release amount to VAI Vault",
						"releaseStartBlock_": "The start block of release to VAI Vault",
						"vault_": "The address of the VAI Vault"
					}
				},
				"_setVenusSpeed(address,uint256)": {
					"params": {
						"vToken": "The market whose XVS speed to update",
						"venusSpeed": "New XVS speed for market"
					}
				},
				"_setVenusVAIRate(uint256)": {
					"params": {
						"venusVAIRate_": "The amount of XVS wei per block to distribute to VAI Mint"
					}
				},
				"_setVenusVAIVaultRate(uint256)": {
					"params": {
						"venusVAIVaultRate_": "The amount of XVS wei per block to distribute to VAI Vault"
					}
				},
				"_supportMarket(address)": {
					"details": "Admin function to set isListed and add support for the market",
					"params": {
						"vToken": "The address of the market (token) to list"
					},
					"return": "uint 0=success, otherwise a failure. (See enum Error for details)"
				},
				"borrowAllowed(address,address,uint256)": {
					"params": {
						"borrowAmount": "The amount of underlying the account would borrow",
						"borrower": "The account which would borrow the asset",
						"vToken": "The market to verify the borrow against"
					},
					"return": "0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"borrowVerify(address,address,uint256)": {
					"params": {
						"borrowAmount": "The amount of the underlying asset requested to borrow",
						"borrower": "The address borrowing the underlying",
						"vToken": "Asset whose underlying is being borrowed"
					}
				},
				"checkMembership(address,address)": {
					"params": {
						"account": "The address of the account to check",
						"vToken": "The vToken to check"
					},
					"return": "True if the account is in the asset, otherwise false."
				},
				"claimVenus(address)": {
					"params": {
						"holder": "The address to claim XVS for"
					}
				},
				"claimVenus(address,address[])": {
					"params": {
						"holder": "The address to claim XVS for",
						"vTokens": "The list of markets to claim XVS in"
					}
				},
				"claimVenus(address[],address[],bool,bool)": {
					"params": {
						"borrowers": "Whether or not to claim XVS earned by borrowing",
						"holders": "The addresses to claim XVS for",
						"suppliers": "Whether or not to claim XVS earned by supplying",
						"vTokens": "The list of markets to claim XVS in"
					}
				},
				"distributeVAIMinterVenus(address,bool)": {
					"details": "VAI minters will not begin to accrue until after the first interaction with the protocol.",
					"params": {
						"vaiMinter": "The address of the VAI minter to distribute XVS to"
					}
				},
				"enterMarkets(address[])": {
					"params": {
						"vTokens": "The list of addresses of the vToken markets to be enabled"
					},
					"return": "Success indicator for whether each corresponding market was entered"
				},
				"exitMarket(address)": {
					"details": "Sender must not have an outstanding borrow balance in the asset, or be providing necessary collateral for an outstanding borrow.",
					"params": {
						"vTokenAddress": "The address of the asset to be removed"
					},
					"return": "Whether or not the account successfully exited the market"
				},
				"getAccountLiquidity(address)": {
					"return": "(possible error code (semi-opaque), account liquidity in excess of collateral requirements,         account shortfall below collateral requirements)"
				},
				"getAllMarkets()": {
					"details": "The automatic getter may be used to access an individual market.",
					"return": "The list of market addresses"
				},
				"getAssetsIn(address)": {
					"params": {
						"account": "The address of the account to pull assets for"
					},
					"return": "A dynamic list with the assets the account has entered"
				},
				"getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
					"params": {
						"account": "The account to determine liquidity for",
						"borrowAmount": "The amount of underlying to hypothetically borrow",
						"redeemTokens": "The number of tokens to hypothetically redeem",
						"vTokenModify": "The market to hypothetically redeem/borrow in"
					},
					"return": "(possible error code (semi-opaque), hypothetical account liquidity in excess of collateral requirements,         hypothetical account shortfall below collateral requirements)"
				},
				"getXVSAddress()": {
					"return": "The address of XVS"
				},
				"liquidateBorrowAllowed(address,address,address,address,uint256)": {
					"params": {
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"repayAmount": "The amount of underlying being repaid",
						"vTokenBorrowed": "Asset which was borrowed by the borrower",
						"vTokenCollateral": "Asset which was used as collateral and will be seized"
					}
				},
				"liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
					"params": {
						"actualRepayAmount": "The amount of underlying being repaid",
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"vTokenBorrowed": "Asset which was borrowed by the borrower",
						"vTokenCollateral": "Asset which was used as collateral and will be seized"
					}
				},
				"liquidateCalculateSeizeTokens(address,address,uint256)": {
					"details": "Used in liquidation (called in vToken.liquidateBorrowFresh)",
					"params": {
						"actualRepayAmount": "The amount of vTokenBorrowed underlying to convert into vTokenCollateral tokens",
						"vTokenBorrowed": "The address of the borrowed vToken",
						"vTokenCollateral": "The address of the collateral vToken"
					},
					"return": "(errorCode, number of vTokenCollateral tokens to be seized in a liquidation)"
				},
				"mintAllowed(address,address,uint256)": {
					"params": {
						"mintAmount": "The amount of underlying being supplied to the market in exchange for tokens",
						"minter": "The account which would get the minted tokens",
						"vToken": "The market to verify the mint against"
					},
					"return": "0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"mintVerify(address,address,uint256,uint256)": {
					"params": {
						"actualMintAmount": "The amount of the underlying asset being minted",
						"mintTokens": "The number of tokens being minted",
						"minter": "The address minting the tokens",
						"vToken": "Asset being minted"
					}
				},
				"redeemAllowed(address,address,uint256)": {
					"params": {
						"redeemTokens": "The number of vTokens to exchange for the underlying asset in the market",
						"redeemer": "The account which would redeem the tokens",
						"vToken": "The market to verify the redeem against"
					},
					"return": "0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"redeemVerify(address,address,uint256,uint256)": {
					"params": {
						"redeemAmount": "The amount of the underlying asset being redeemed",
						"redeemTokens": "The number of tokens being redeemed",
						"redeemer": "The address redeeming the tokens",
						"vToken": "Asset being redeemed"
					}
				},
				"repayBorrowAllowed(address,address,address,uint256)": {
					"params": {
						"borrower": "The account which would repay the asset",
						"payer": "The account which would repay the asset",
						"repayAmount": "The amount of the underlying asset the account would repay",
						"vToken": "The market to verify the repay against"
					},
					"return": "0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"repayBorrowVerify(address,address,address,uint256,uint256)": {
					"params": {
						"actualRepayAmount": "The amount of underlying being repaid",
						"borrower": "The address of the borrower",
						"payer": "The address repaying the borrow",
						"vToken": "Asset being repaid"
					}
				},
				"seizeAllowed(address,address,address,address,uint256)": {
					"params": {
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"seizeTokens": "The number of collateral tokens to seize",
						"vTokenBorrowed": "Asset which was borrowed by the borrower",
						"vTokenCollateral": "Asset which was used as collateral and will be seized"
					}
				},
				"seizeVerify(address,address,address,address,uint256)": {
					"params": {
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"seizeTokens": "The number of collateral tokens to seize",
						"vTokenBorrowed": "Asset which was borrowed by the borrower",
						"vTokenCollateral": "Asset which was used as collateral and will be seized"
					}
				},
				"setMintedVAIOf(address,uint256)": {
					"params": {
						"amount": "The amount of VAI to set to the account",
						"owner": "The address of the account to set"
					},
					"return": "The number of minted VAI by `owner`"
				},
				"transferAllowed(address,address,address,uint256)": {
					"params": {
						"dst": "The account which receives the tokens",
						"src": "The account which sources the tokens",
						"transferTokens": "The number of vTokens to transfer",
						"vToken": "The market to verify the transfer against"
					},
					"return": "0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"transferVerify(address,address,address,uint256)": {
					"params": {
						"dst": "The account which receives the tokens",
						"src": "The account which sources the tokens",
						"transferTokens": "The number of vTokens to transfer",
						"vToken": "Asset being transferred"
					}
				}
			},
			"title": "Venus's Comptroller Contract"
		},
		"userdoc": {
			"methods": {
				"_setBorrowCapGuardian(address)": {
					"notice": "Admin function to change the Borrow Cap Guardian"
				},
				"_setCloseFactor(uint256)": {
					"notice": "Sets the closeFactor used when liquidating borrows"
				},
				"_setCollateralFactor(address,uint256)": {
					"notice": "Sets the collateralFactor for a market"
				},
				"_setLiquidationIncentive(uint256)": {
					"notice": "Sets liquidationIncentive"
				},
				"_setMarketBorrowCaps(address[],uint256[])": {
					"notice": "Set the given borrow caps for the given vToken markets. Borrowing that brings total borrows to or above borrow cap will revert."
				},
				"_setMaxAssets(uint256)": {
					"notice": "Sets maxAssets which controls how many markets can be entered"
				},
				"_setPriceOracle(address)": {
					"notice": "Sets a new price oracle for the comptroller"
				},
				"_setProtocolPaused(bool)": {
					"notice": "Set whole protocol pause/unpause state"
				},
				"_setVAIController(address)": {
					"notice": "Sets a new VAI controller"
				},
				"_setVAIVaultInfo(address,uint256,uint256)": {
					"notice": "Set the VAI Vault infos"
				},
				"_setVenusSpeed(address,uint256)": {
					"notice": "Set XVS speed for a single market"
				},
				"_setVenusVAIRate(uint256)": {
					"notice": "Set the amount of XVS distributed per block to VAI Mint"
				},
				"_setVenusVAIVaultRate(uint256)": {
					"notice": "Set the amount of XVS distributed per block to VAI Vault"
				},
				"_supportMarket(address)": {
					"notice": "Add the market to the markets mapping and set it as listed"
				},
				"borrowAllowed(address,address,uint256)": {
					"notice": "Checks if the account should be allowed to borrow the underlying asset of the given market"
				},
				"borrowVerify(address,address,uint256)": {
					"notice": "Validates borrow and reverts on rejection. May emit logs."
				},
				"checkMembership(address,address)": {
					"notice": "Returns whether the given account is entered in the given asset"
				},
				"claimVenus(address)": {
					"notice": "Claim all the xvs accrued by holder in all markets and VAI"
				},
				"claimVenus(address,address[])": {
					"notice": "Claim all the xvs accrued by holder in the specified markets"
				},
				"claimVenus(address[],address[],bool,bool)": {
					"notice": "Claim all xvs accrued by the holders"
				},
				"distributeVAIMinterVenus(address,bool)": {
					"notice": "Calculate XVS accrued by a VAI minter and possibly transfer it to them"
				},
				"enterMarkets(address[])": {
					"notice": "Add assets to be included in account liquidity calculation"
				},
				"exitMarket(address)": {
					"notice": "Removes asset from sender's account liquidity calculation"
				},
				"getAccountLiquidity(address)": {
					"notice": "Determine the current account liquidity wrt collateral requirements"
				},
				"getAllMarkets()": {
					"notice": "Return all of the markets"
				},
				"getAssetsIn(address)": {
					"notice": "Returns the assets an account has entered"
				},
				"getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
					"notice": "Determine what the account liquidity would be if the given amounts were redeemed/borrowed"
				},
				"getXVSAddress()": {
					"notice": "Return the address of the XVS token"
				},
				"liquidateBorrowAllowed(address,address,address,address,uint256)": {
					"notice": "Checks if the liquidation should be allowed to occur"
				},
				"liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
					"notice": "Validates liquidateBorrow and reverts on rejection. May emit logs."
				},
				"liquidateCalculateSeizeTokens(address,address,uint256)": {
					"notice": "Calculate number of tokens of collateral asset to seize given an underlying amount"
				},
				"mintAllowed(address,address,uint256)": {
					"notice": "Checks if the account should be allowed to mint tokens in the given market"
				},
				"mintVerify(address,address,uint256,uint256)": {
					"notice": "Validates mint and reverts on rejection. May emit logs."
				},
				"redeemAllowed(address,address,uint256)": {
					"notice": "Checks if the account should be allowed to redeem tokens in the given market"
				},
				"redeemVerify(address,address,uint256,uint256)": {
					"notice": "Validates redeem and reverts on rejection. May emit logs."
				},
				"releaseToVault()": {
					"notice": "Transfer XVS to VAI Vault"
				},
				"repayBorrowAllowed(address,address,address,uint256)": {
					"notice": "Checks if the account should be allowed to repay a borrow in the given market"
				},
				"repayBorrowVerify(address,address,address,uint256,uint256)": {
					"notice": "Validates repayBorrow and reverts on rejection. May emit logs."
				},
				"seizeAllowed(address,address,address,address,uint256)": {
					"notice": "Checks if the seizing of assets should be allowed to occur"
				},
				"seizeVerify(address,address,address,address,uint256)": {
					"notice": "Validates seize and reverts on rejection. May emit logs."
				},
				"setMintedVAIOf(address,uint256)": {
					"notice": "Set the minted VAI amount of the `owner`"
				},
				"transferAllowed(address,address,address,uint256)": {
					"notice": "Checks if the account should be allowed to transfer tokens in the given market"
				},
				"transferVerify(address,address,address,uint256)": {
					"notice": "Validates transfer and reverts on rejection. May emit logs."
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/ComptrollerG3.sol": "ComptrollerG3"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/CarefulMath.sol": {
			"keccak256": "0x855f65e2bd271e114555e71a10c3b3276ab70643c0c96a452b3493423de474a4",
			"urls": [
				"bzz-raw://b9d5e4067644205b15f4a0070c94780c512a33112f1e72637ea65525f3e080e8",
				"dweb:/ipfs/QmS4TLNXX5DwLnidByLioGgT1bnF5KEDcjTjy73v5FsEQa"
			]
		},
		"localhost/ComptrollerG3.sol": {
			"keccak256": "0x10aeda1d74d99db12b1ae2688616abff4594d14b2ebd3e93baf17077f9444020",
			"urls": [
				"bzz-raw://c78d9347142337440e60589b322789ead4968b4384e5323331dc4a1485bac2fe",
				"dweb:/ipfs/QmbLJB8ycq95bwRMhmZKMcryeUFe6h7GqJyqzF7gzZFUK8"
			]
		},
		"localhost/ComptrollerInterface.sol": {
			"keccak256": "0x1fcdfabea91e6d2fe88e5b73d9d7ad878c5ad7666ca6f50898a462f0ff4a2e34",
			"urls": [
				"bzz-raw://5f2bd4c62f2e3774ba7c1670ea3688482413a00383d1a558151376f9ec0146ef",
				"dweb:/ipfs/QmZT9StA3edEz4AHCqWDEC1bpaqNAjG87aLbqbTuJpWKa1"
			]
		},
		"localhost/ComptrollerStorage.sol": {
			"keccak256": "0x1c9ad17165a9a59db21b185fac275459f459b0b0af799c36ee9bee936ab909a1",
			"urls": [
				"bzz-raw://8b4ffc1c23d96a7e693a81463370a62a7f361e0c3fb88912b06560087498ebbf",
				"dweb:/ipfs/QmWPoJDR2H5hvTnnzesYgNYdZynQNkbeDVRUn22YeeyXSi"
			]
		},
		"localhost/EIP20Interface.sol": {
			"keccak256": "0x33c5c2c7a45637618ec3ff2741c6902c356ef9ced300a0779edb5238791bf70f",
			"urls": [
				"bzz-raw://6d7d44e49e90351ac4ffb3e23fb8cded5fe16ee97bd0a7574dce5b5c62289db5",
				"dweb:/ipfs/QmUDjHJG2jmsoCur474avy3VKEr3iT6yoXAaHyrzgfPA7y"
			]
		},
		"localhost/EIP20NonStandardInterface.sol": {
			"keccak256": "0x210d80c5343b519cbb0745bc5c7157b79100c5870c80a90596bbeff9186c2b5c",
			"urls": [
				"bzz-raw://2424ab90dcf8fc6b636607c4acc3128b6594a23b04d0a93940f8195b5197deca",
				"dweb:/ipfs/QmaP5BpefdErChAJGyxKbLgLcw15M2r352hLNdVZg4aW3o"
			]
		},
		"localhost/ErrorReporter.sol": {
			"keccak256": "0x08bdc77bdcb6954ce9d0367de18184644f30afdc959f54e226788e8813ea3654",
			"urls": [
				"bzz-raw://b84c52005a8ec879ef1423aa5b32a1d3fba8f3ecf78a25f99577b2442034e50c",
				"dweb:/ipfs/QmWWPGHww76gi8DEceCg4W7GwD4djpkGU3rsW9X1CTFXfr"
			]
		},
		"localhost/Exponential.sol": {
			"keccak256": "0x9f441978e19b6e2788386a713bbe330345d98a782da025f583d9dbdb716ab745",
			"urls": [
				"bzz-raw://44f8c6abe0bbf1ae08e790b80cb1827d42dd3baa9eea22a4343eb4ca6cf90693",
				"dweb:/ipfs/Qmc6kAB41xwr3Jywhu17vjMGtCbq5j7bB1uZhZigjnceZB"
			]
		},
		"localhost/ExponentialNoError.sol": {
			"keccak256": "0x1ed4e4fc1926f2db120798edbd049838c4d47fdbf3416a9aeb4a91ae1872dfc7",
			"urls": [
				"bzz-raw://28ad9ce6f1d69a722ab37fd0d1acbf49eddcbf9b7452709f6e41b1d57ed89286",
				"dweb:/ipfs/Qmah2P2yciY8QYGUp5yG7EoJP4TNM1LZkyuWWAMuPUR6Xy"
			]
		},
		"localhost/Governance/XVS.sol": {
			"keccak256": "0xbe1107ef85893235c8a8954b60da408469da5e04a1e3286c9a7e63840255f798",
			"urls": [
				"bzz-raw://990d717dad5ff332be583b4328e64014340a569dd244e5680617a87aeefe39c0",
				"dweb:/ipfs/QmSiJc9jT6GYA2Z2iFQs3uaqsTtGcSM6DNmMg8p6t6Apba"
			]
		},
		"localhost/InterestRateModel.sol": {
			"keccak256": "0x5c9db9f1b8de79d4a3780a4475f92028794e36829d82b587339db3afd415d4e3",
			"urls": [
				"bzz-raw://b4b605dd8d76d33b8dfce0885ddec7ef91518706108064c901bdcc3f21d2c6f2",
				"dweb:/ipfs/QmQ53KgdUoprraEc3Ns9a9PRzT3MZMaHzqHfdre48X5wjX"
			]
		},
		"localhost/PriceOracle.sol": {
			"keccak256": "0x1da723eb84ea9aa8431516821895f531150bb490fcc442b29f26428e3409083f",
			"urls": [
				"bzz-raw://525c2053663f15bffb2f46322601836709c842783478c2579732ddb88afb6b61",
				"dweb:/ipfs/QmbjTsHUNRZeCscfHS4KcvCs25wZNky3ExCvXaVr17hHAi"
			]
		},
		"localhost/Unitroller.sol": {
			"keccak256": "0x78f122b438ba1fc5a584a0a5733be925344ba0e11b3cf4fcecde48b93824538b",
			"urls": [
				"bzz-raw://8863a73562187e0fe1910302d5f7e1092bfd6f64f9517ba326c0f57926b1c90b",
				"dweb:/ipfs/QmTdphSeJPV2vBvwkoVvV6Y4yK6MJoyzMaAbgT52nGYQBM"
			]
		},
		"localhost/VAI/VAI.sol": {
			"keccak256": "0xcca4f89c1c5f9e76dad4d62eda962c4a02c2b2a8ee06af101cbfe7bb1da6b14a",
			"urls": [
				"bzz-raw://dd91f008138b74990c9542715f9c5f0bcd4f557979499ee37202a331d8ba834f",
				"dweb:/ipfs/QmS3HgBoGWnRRv2gYyzVB2HRiMZvJ3sn2vPDznz4ikU7Uk"
			]
		},
		"localhost/VAI/lib.sol": {
			"keccak256": "0x9664fcab8e6e944b2f5dd5424731e3a0d015df22b7c86467e5641732a1b71efd",
			"urls": [
				"bzz-raw://343de05aad0fd68430243811f836150d080ada8b578b4b67bc6a2bae8566d8ef",
				"dweb:/ipfs/QmcrQT61unQmbNeC8K7QnQqoCC5ph1VBWAGDG1drd7okfx"
			]
		},
		"localhost/VAIControllerInterface.sol": {
			"keccak256": "0x7253d2c877106d89214c1faeaa181672df445b58703b5a190c257c7bd2d9dc3b",
			"urls": [
				"bzz-raw://ab74c8709ee01229a2e06f74d88a4d28caa2c0bdf6e4e9fadfc632ff12162ab2",
				"dweb:/ipfs/QmWvRwtwnKmCALGGmFJJnxEnQTh7RtBbVVQtjboxm9a9Xy"
			]
		},
		"localhost/VToken.sol": {
			"keccak256": "0xf4667d961ee386cb1d8c269252c5b37c7954ce67a752b79bf6b5259584866b79",
			"urls": [
				"bzz-raw://51aa02b8a8a09984f22dec60351bc8d07723a1d35aa3b65e0e1f7f13363e6999",
				"dweb:/ipfs/QmQwFNBdGcPnYaU3mArVjpNu2EaQnThPJCHsvqu44wQX4D"
			]
		},
		"localhost/VTokenInterfaces.sol": {
			"keccak256": "0x3b920718cbc8158be17f257eca7c2f69d69f3c7c2e0baa55cd3081895c392a13",
			"urls": [
				"bzz-raw://39ac71afca655632277ccfa559e4d15cc5286793fa7fd0e0b264c86e576275c7",
				"dweb:/ipfs/QmZPJHmxge4Ujn4GYGTRWcxEjY1p2huP63fjyVoGBJsP4X"
			]
		}
	},
	"version": 1
}