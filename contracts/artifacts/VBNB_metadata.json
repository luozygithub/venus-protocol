{
	"compiler": {
		"version": "0.5.17+commit.d19bba13"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract ComptrollerInterface",
						"name": "comptroller_",
						"type": "address"
					},
					{
						"internalType": "contract InterestRateModel",
						"name": "interestRateModel_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "initialExchangeRateMantissa_",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol_",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "decimals_",
						"type": "uint8"
					},
					{
						"internalType": "address payable",
						"name": "admin_",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cashPrior",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "interestAccumulated",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "borrowIndex",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalBorrows",
						"type": "uint256"
					}
				],
				"name": "AccrueInterest",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "accountBorrows",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalBorrows",
						"type": "uint256"
					}
				],
				"name": "Borrow",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "error",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "info",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "detail",
						"type": "uint256"
					}
				],
				"name": "Failure",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "repayAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "vTokenCollateral",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "LiquidateBorrow",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "mintAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "mintTokens",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "NewAdmin",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract ComptrollerInterface",
						"name": "oldComptroller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "contract ComptrollerInterface",
						"name": "newComptroller",
						"type": "address"
					}
				],
				"name": "NewComptroller",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract InterestRateModel",
						"name": "oldInterestRateModel",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "contract InterestRateModel",
						"name": "newInterestRateModel",
						"type": "address"
					}
				],
				"name": "NewMarketInterestRateModel",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldPendingAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newPendingAdmin",
						"type": "address"
					}
				],
				"name": "NewPendingAdmin",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldReserveFactorMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newReserveFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "NewReserveFactor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "redeemer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "redeemAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					}
				],
				"name": "Redeem",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "redeemer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "feeAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					}
				],
				"name": "RedeemFee",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "payer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "repayAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "accountBorrows",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalBorrows",
						"type": "uint256"
					}
				],
				"name": "RepayBorrow",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "benefactor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "addAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newTotalReserves",
						"type": "uint256"
					}
				],
				"name": "ReservesAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "reduceAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newTotalReserves",
						"type": "uint256"
					}
				],
				"name": "ReservesReduced",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "_acceptAdmin",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "reduceAmount",
						"type": "uint256"
					}
				],
				"name": "_reduceReserves",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract ComptrollerInterface",
						"name": "newComptroller",
						"type": "address"
					}
				],
				"name": "_setComptroller",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract InterestRateModel",
						"name": "newInterestRateModel",
						"type": "address"
					}
				],
				"name": "_setInterestRateModel",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address payable",
						"name": "newPendingAdmin",
						"type": "address"
					}
				],
				"name": "_setPendingAdmin",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newReserveFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "_setReserveFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "accrualBlockNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "accrueInterest",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOfUnderlying",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "borrow",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "borrowBalanceCurrent",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "borrowBalanceStored",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "borrowIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "borrowRatePerBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "comptroller",
				"outputs": [
					{
						"internalType": "contract ComptrollerInterface",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "exchangeRateCurrent",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "exchangeRateStored",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getAccountSnapshot",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getCash",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract ComptrollerInterface",
						"name": "comptroller_",
						"type": "address"
					},
					{
						"internalType": "contract InterestRateModel",
						"name": "interestRateModel_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "initialExchangeRateMantissa_",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol_",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "decimals_",
						"type": "uint8"
					}
				],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "interestRateModel",
				"outputs": [
					{
						"internalType": "contract InterestRateModel",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isVToken",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "contract VToken",
						"name": "vTokenCollateral",
						"type": "address"
					}
				],
				"name": "liquidateBorrow",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "mint",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pendingAdmin",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					}
				],
				"name": "redeem",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "redeemAmount",
						"type": "uint256"
					}
				],
				"name": "redeemUnderlying",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "repayBorrow",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					}
				],
				"name": "repayBorrowBehalf",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "reserveFactorMantissa",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "seize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "supplyRatePerBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalBorrows",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "totalBorrowsCurrent",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalReserves",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "src",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Venus",
			"methods": {
				"_acceptAdmin()": {
					"details": "Admin function for pending admin to accept role and update admin",
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"_reduceReserves(uint256)": {
					"params": {
						"reduceAmount": "Amount of reduction to reserves"
					},
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"_setComptroller(address)": {
					"details": "Admin function to set a new comptroller",
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"_setInterestRateModel(address)": {
					"details": "Admin function to accrue interest and update the interest rate model",
					"params": {
						"newInterestRateModel": "the new interest rate model to use"
					},
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"_setPendingAdmin(address)": {
					"details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
					"params": {
						"newPendingAdmin": "New pending admin."
					},
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"_setReserveFactor(uint256)": {
					"details": "Admin function to accrue interest and set a new reserve factor",
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"accrueInterest()": {
					"details": "This calculates interest accrued from the last checkpointed block  up to the current block and writes new checkpoint to storage."
				},
				"allowance(address,address)": {
					"params": {
						"owner": "The address of the account which owns the tokens to be spent",
						"spender": "The address of the account which may transfer tokens"
					},
					"return": "The number of tokens allowed to be spent (-1 means infinite)"
				},
				"approve(address,uint256)": {
					"details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
					"params": {
						"amount": "The number of tokens that are approved (-1 means infinite)",
						"spender": "The address of the account which may transfer tokens"
					},
					"return": "Whether or not the approval succeeded"
				},
				"balanceOf(address)": {
					"params": {
						"owner": "The address of the account to query"
					},
					"return": "The number of tokens owned by `owner`"
				},
				"balanceOfUnderlying(address)": {
					"details": "This also accrues interest in a transaction",
					"params": {
						"owner": "The address of the account to query"
					},
					"return": "The amount of underlying owned by `owner`"
				},
				"borrow(uint256)": {
					"params": {
						"borrowAmount": "The amount of the underlying asset to borrow"
					},
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"borrowBalanceCurrent(address)": {
					"params": {
						"account": "The address whose balance should be calculated after updating borrowIndex"
					},
					"return": "The calculated balance"
				},
				"borrowBalanceStored(address)": {
					"params": {
						"account": "The address whose balance should be calculated"
					},
					"return": "The calculated balance"
				},
				"borrowRatePerBlock()": {
					"return": "The borrow interest rate per block, scaled by 1e18"
				},
				"constructor": {
					"params": {
						"admin_": "Address of the administrator of this token",
						"comptroller_": "The address of the Comptroller",
						"decimals_": "BEP-20 decimal precision of this token",
						"initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
						"interestRateModel_": "The address of the interest rate model利率的地址模型",
						"name_": "BEP-20 name of this token",
						"symbol_": "BEP-20 symbol of this token"
					}
				},
				"exchangeRateCurrent()": {
					"return": "Calculated exchange rate scaled by 1e18"
				},
				"exchangeRateStored()": {
					"details": "This function does not accrue interest before calculating the exchange rate",
					"return": "Calculated exchange rate scaled by 1e18"
				},
				"getAccountSnapshot(address)": {
					"details": "This is used by comptroller to more efficiently perform liquidity checks.",
					"params": {
						"account": "Address of the account to snapshot"
					},
					"return": "(possible error, token balance, borrow balance, exchange rate mantissa)"
				},
				"getCash()": {
					"return": "The quantity of underlying asset owned by this contract"
				},
				"initialize(address,address,uint256,string,string,uint8)": {
					"params": {
						"comptroller_": "The address of the Comptroller ：comptroller审计长地址",
						"decimals_": "EIP-20 decimal precision of this token",
						"initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18 初始汇率，按比例1e18",
						"interestRateModel_": "The address of the interest rate model ：interestemodel_利率模型的地址",
						"name_": "EIP-20 name of this token",
						"symbol_": "EIP-20 symbol of this token"
					}
				},
				"liquidateBorrow(address,address)": {
					"details": "Reverts upon any failure",
					"params": {
						"borrower": "The borrower of this vToken to be liquidated",
						"vTokenCollateral": "The market in which to seize collateral from the borrower"
					}
				},
				"mint()": {
					"details": "Reverts upon any failure"
				},
				"redeem(uint256)": {
					"details": "Accrues interest whether or not the operation succeeds, unless reverted",
					"params": {
						"redeemTokens": "The number of vTokens to redeem into underlying"
					},
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"redeemUnderlying(uint256)": {
					"details": "Accrues interest whether or not the operation succeeds, unless reverted",
					"params": {
						"redeemAmount": "The amount of underlying to redeem"
					},
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"repayBorrow()": {
					"details": "Reverts upon any failure"
				},
				"repayBorrowBehalf(address)": {
					"details": "Reverts upon any failure",
					"params": {
						"borrower": "the account with the debt being payed off"
					}
				},
				"seize(address,address,uint256)": {
					"details": "Will fail unless called by another vToken during the process of liquidation. Its absolutely critical to use msg.sender as the borrowed vToken and not a parameter.",
					"params": {
						"borrower": "The account having collateral seized",
						"liquidator": "The account receiving seized collateral",
						"seizeTokens": "The number of vTokens to seize"
					},
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"supplyRatePerBlock()": {
					"return": "The supply interest rate per block, scaled by 1e18"
				},
				"totalBorrowsCurrent()": {
					"return": "The total borrows with interest"
				},
				"transfer(address,uint256)": {
					"params": {
						"amount": "The number of tokens to transfer",
						"dst": "The address of the destination account"
					},
					"return": "Whether or not the transfer succeeded"
				},
				"transferFrom(address,address,uint256)": {
					"params": {
						"amount": "The number of tokens to transfer",
						"dst": "The address of the destination account",
						"src": "The address of the source account"
					},
					"return": "Whether or not the transfer succeeded"
				}
			},
			"title": "Venus's VBNB Contract"
		},
		"userdoc": {
			"methods": {
				"_acceptAdmin()": {
					"notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
				},
				"_reduceReserves(uint256)": {
					"notice": "Accrues interest and reduces reserves by transferring to admin"
				},
				"_setComptroller(address)": {
					"notice": "Sets a new comptroller for the market"
				},
				"_setInterestRateModel(address)": {
					"notice": "accrues interest and updates the interest rate model using _setInterestRateModelFresh"
				},
				"_setPendingAdmin(address)": {
					"notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
				},
				"_setReserveFactor(uint256)": {
					"notice": "accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh"
				},
				"accrueInterest()": {
					"notice": "Applies accrued interest to total borrows and reserves"
				},
				"allowance(address,address)": {
					"notice": "Get the current allowance from `owner` for `spender`"
				},
				"approve(address,uint256)": {
					"notice": "Approve `spender` to transfer up to `amount` from `src`"
				},
				"balanceOf(address)": {
					"notice": "Get the token balance of the `owner`"
				},
				"balanceOfUnderlying(address)": {
					"notice": "Get the underlying balance of the `owner`"
				},
				"borrow(uint256)": {
					"notice": "Sender borrows assets from the protocol to their own address"
				},
				"borrowBalanceCurrent(address)": {
					"notice": "Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex"
				},
				"borrowBalanceStored(address)": {
					"notice": "Return the borrow balance of account based on stored data"
				},
				"borrowRatePerBlock()": {
					"notice": "Returns the current per-block borrow interest rate for this vToken"
				},
				"constructor": "Construct a new VBNB money market",
				"exchangeRateCurrent()": {
					"notice": "Accrue interest then return the up-to-date exchange rate"
				},
				"exchangeRateStored()": {
					"notice": "Calculates the exchange rate from the underlying to the VToken"
				},
				"getAccountSnapshot(address)": {
					"notice": "Get a snapshot of the account's balances, and the cached exchange rate"
				},
				"getCash()": {
					"notice": "Get cash balance of this vToken in the underlying asset"
				},
				"initialize(address,address,uint256,string,string,uint8)": {
					"notice": "Initialize the money market  初始化"
				},
				"liquidateBorrow(address,address)": {
					"notice": "The sender liquidates the borrowers collateral. The collateral seized is transferred to the liquidator."
				},
				"mint()": {
					"notice": "Sender supplies assets into the market and receives vTokens in exchange"
				},
				"redeem(uint256)": {
					"notice": "Sender redeems vTokens in exchange for the underlying asset"
				},
				"redeemUnderlying(uint256)": {
					"notice": "Sender redeems vTokens in exchange for a specified amount of underlying asset"
				},
				"repayBorrow()": {
					"notice": "Sender repays their own borrow"
				},
				"repayBorrowBehalf(address)": {
					"notice": "Sender repays a borrow belonging to borrower"
				},
				"seize(address,address,uint256)": {
					"notice": "Transfers collateral tokens (this market) to the liquidator."
				},
				"supplyRatePerBlock()": {
					"notice": "Returns the current per-block supply interest rate for this vToken"
				},
				"totalBorrowsCurrent()": {
					"notice": "Returns the current total borrows plus accrued interest"
				},
				"transfer(address,uint256)": {
					"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Transfer `amount` tokens from `src` to `dst`"
				}
			},
			"notice": "VToken which wraps BNB"
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/VBNB.sol": "VBNB"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/CarefulMath.sol": {
			"keccak256": "0x855f65e2bd271e114555e71a10c3b3276ab70643c0c96a452b3493423de474a4",
			"urls": [
				"bzz-raw://b9d5e4067644205b15f4a0070c94780c512a33112f1e72637ea65525f3e080e8",
				"dweb:/ipfs/QmS4TLNXX5DwLnidByLioGgT1bnF5KEDcjTjy73v5FsEQa"
			]
		},
		"localhost/ComptrollerInterface.sol": {
			"keccak256": "0x1fcdfabea91e6d2fe88e5b73d9d7ad878c5ad7666ca6f50898a462f0ff4a2e34",
			"urls": [
				"bzz-raw://5f2bd4c62f2e3774ba7c1670ea3688482413a00383d1a558151376f9ec0146ef",
				"dweb:/ipfs/QmZT9StA3edEz4AHCqWDEC1bpaqNAjG87aLbqbTuJpWKa1"
			]
		},
		"localhost/EIP20Interface.sol": {
			"keccak256": "0x33c5c2c7a45637618ec3ff2741c6902c356ef9ced300a0779edb5238791bf70f",
			"urls": [
				"bzz-raw://6d7d44e49e90351ac4ffb3e23fb8cded5fe16ee97bd0a7574dce5b5c62289db5",
				"dweb:/ipfs/QmUDjHJG2jmsoCur474avy3VKEr3iT6yoXAaHyrzgfPA7y"
			]
		},
		"localhost/EIP20NonStandardInterface.sol": {
			"keccak256": "0x210d80c5343b519cbb0745bc5c7157b79100c5870c80a90596bbeff9186c2b5c",
			"urls": [
				"bzz-raw://2424ab90dcf8fc6b636607c4acc3128b6594a23b04d0a93940f8195b5197deca",
				"dweb:/ipfs/QmaP5BpefdErChAJGyxKbLgLcw15M2r352hLNdVZg4aW3o"
			]
		},
		"localhost/ErrorReporter.sol": {
			"keccak256": "0x08bdc77bdcb6954ce9d0367de18184644f30afdc959f54e226788e8813ea3654",
			"urls": [
				"bzz-raw://b84c52005a8ec879ef1423aa5b32a1d3fba8f3ecf78a25f99577b2442034e50c",
				"dweb:/ipfs/QmWWPGHww76gi8DEceCg4W7GwD4djpkGU3rsW9X1CTFXfr"
			]
		},
		"localhost/Exponential.sol": {
			"keccak256": "0x9f441978e19b6e2788386a713bbe330345d98a782da025f583d9dbdb716ab745",
			"urls": [
				"bzz-raw://44f8c6abe0bbf1ae08e790b80cb1827d42dd3baa9eea22a4343eb4ca6cf90693",
				"dweb:/ipfs/Qmc6kAB41xwr3Jywhu17vjMGtCbq5j7bB1uZhZigjnceZB"
			]
		},
		"localhost/ExponentialNoError.sol": {
			"keccak256": "0x1ed4e4fc1926f2db120798edbd049838c4d47fdbf3416a9aeb4a91ae1872dfc7",
			"urls": [
				"bzz-raw://28ad9ce6f1d69a722ab37fd0d1acbf49eddcbf9b7452709f6e41b1d57ed89286",
				"dweb:/ipfs/Qmah2P2yciY8QYGUp5yG7EoJP4TNM1LZkyuWWAMuPUR6Xy"
			]
		},
		"localhost/InterestRateModel.sol": {
			"keccak256": "0x5c9db9f1b8de79d4a3780a4475f92028794e36829d82b587339db3afd415d4e3",
			"urls": [
				"bzz-raw://b4b605dd8d76d33b8dfce0885ddec7ef91518706108064c901bdcc3f21d2c6f2",
				"dweb:/ipfs/QmQ53KgdUoprraEc3Ns9a9PRzT3MZMaHzqHfdre48X5wjX"
			]
		},
		"localhost/VBNB.sol": {
			"keccak256": "0x28643096817b723c18424ccd0bf89b8f054091e2e3039db59ef94e4a62f6b8a0",
			"urls": [
				"bzz-raw://37386a774ed79a56e62aee24bed051cca2d7d27223a31b705e610cb63f52d4b6",
				"dweb:/ipfs/QmXHYBARNhcG5UuDeXpiL7186FVXrJmbAk9Rk9XhnKbeY2"
			]
		},
		"localhost/VToken.sol": {
			"keccak256": "0xf4667d961ee386cb1d8c269252c5b37c7954ce67a752b79bf6b5259584866b79",
			"urls": [
				"bzz-raw://51aa02b8a8a09984f22dec60351bc8d07723a1d35aa3b65e0e1f7f13363e6999",
				"dweb:/ipfs/QmQwFNBdGcPnYaU3mArVjpNu2EaQnThPJCHsvqu44wQX4D"
			]
		},
		"localhost/VTokenInterfaces.sol": {
			"keccak256": "0x3b920718cbc8158be17f257eca7c2f69d69f3c7c2e0baa55cd3081895c392a13",
			"urls": [
				"bzz-raw://39ac71afca655632277ccfa559e4d15cc5286793fa7fd0e0b264c86e576275c7",
				"dweb:/ipfs/QmZPJHmxge4Ujn4GYGTRWcxEjY1p2huP63fjyVoGBJsP4X"
			]
		}
	},
	"version": 1
}